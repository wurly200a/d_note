@startuml

' sys/
package sys {
    class Config
    class DateTime
    class File
    class Font
    class LinkedList
    class Version
    class WinMain
}

' wnd/
package wnd {
    package MainWnd {
        class MainWnd
        class MainWndMenu
        MainWnd -- MainWndMenu
    }

    package EditWnd {
        class "EditWnd" as EditWnd {
            BOOL EditWndRegisterClass( HINSTANCE hInst );
            void EditWndDataInit( HWND hwnd );
            void EditWndDataSet( HWND hwnd, TCHAR* dataPtr, DWORD length, BOOL bInit );
            BOOL EditWndDataGet( HWND hwnd, TCHAR *dataPtr, DWORD dataSize, EDITWND_REGION region );
            DWORD EditWndGetDataSize( HWND hwnd, EDITWND_REGION region );
            DWORD EditWndGetColumnMaxSize( HWND hwnd );
            DWORD EditWndGetCaretXpos( HWND hwnd );
            typedef UINT NEWLINECODE_TYPE;
            BOOL EditWndNewLineCodeSet( HWND hwnd, NEWLINECODE_TYPE newLineCodeType );
            BOOL EditWndFindDataSet( HWND hwnd, TCHAR* dataPtr, DWORD length, BOOL bDirectionUp, BOOL bMatchCase );
        }

        class "EditWndBuffer" as EditWndBuffer {
            H_EDITWND_BUFF EditWndBuffCreate( void );
            BOOL EditWndBuffDestroy( H_EDITWND_BUFF hEditWndBuff );
            void EditWndBuffInit( H_EDITWND_BUFF hEditWndBuff );
            void EditWndBuffEnd( H_EDITWND_BUFF hEditWndBuff );
            void EditWndBuffDataSet( H_EDITWND_BUFF hEditWndBuff, TCHAR* dataPtr, DWORD length, BOOL bInit );
            BOOL EditWndBuffDataGet( H_EDITWND_BUFF hEditWndBuff, TCHAR *dataPtr, DWORD dataSize, EDITWND_BUFF_REGION region );
            DWORD EditWndBuffGetDataSize( H_EDITWND_BUFF hEditWndBuff, EDITWND_BUFF_REGION region );
            DWORD EditWndBuffGetLineMaxSize( H_EDITWND_BUFF hEditWndBuff );
            DWORD EditWndBuffGetColumnMaxSize( H_EDITWND_BUFF hEditWndBuff);
            DWORD EditWndBuffGetCaretXpos( H_EDITWND_BUFF hEditWndBuff );
            DWORD EditWndBuffGetCaretYpos( H_EDITWND_BUFF hEditWndBuff );
            BOOL EditWndBuffSetCaretPos( H_EDITWND_BUFF hEditWndBuff, DWORD xPos, DWORD lineNum );
            void EditWndBuffIncCaretXpos( H_EDITWND_BUFF hEditWndBuff );
            void EditWndBuffDecCaretXpos( H_EDITWND_BUFF hEditWndBuff );
            void EditWndBuffIncCaretYpos( H_EDITWND_BUFF hEditWndBuff );
            void EditWndBuffDecCaretYpos( H_EDITWND_BUFF hEditWndBuff );
            H_EDITWND_BUFF_LINE EditWndBuffGetLinePtr( H_EDITWND_BUFF hEditWndBuff, DWORD lineNum );
            H_EDITWND_BUFF_LINE EditWndBuffGetLineNextPtr( H_EDITWND_BUFF_LINE hLineData );
            BOOL EditWndBuffGetDispData( H_EDITWND_BUFF hEditWndBuff, H_EDITWND_BUFF_LINE hLineData, DWORD dispPos, S_BUFF_DISP_DATA *dataPtr );
            void EditWndBuffSetNewLineCode( H_EDITWND_BUFF hEditWndBuff, UINT newLineType );
            void EditWndBuffRemoveData( H_EDITWND_BUFF hEditWndBuff, BOOL bBackSpace );
            INT EditWndBuffGetNewLineData( H_EDITWND_BUFF hEditWndBuff, PTSTR dataPtr );
            BOOL EditWndBuffSetTabSize( H_EDITWND_BUFF hEditWndBuff, INT tabSize );
            void EditWndBuffSelectOn( H_EDITWND_BUFF hEditWndBuff );
            BOOL EditWndBuffSelectOff( H_EDITWND_BUFF hEditWndBuff );
            BOOL EditWndBuffSelectAll( H_EDITWND_BUFF hEditWndBuff );
            BOOL EditWndBuffFindDataSet( H_EDITWND_BUFF hEditWndBuff, TCHAR* dataPtr, DWORD length, BOOL bDirectionUp, BOOL bMatchCase );
            BOOL EditWndBuffUndo( H_EDITWND_BUFF hEditWndBuff );
        }
        class EditWndBufferData

        EditWnd -- EditWndBuffer
        EditWndBuffer -- EditWndBufferData
    }

    class ModalDlg
    class SomeCtrl
    class StsBar
}

WinMain -- MainWnd

MainWnd -- EditWnd
MainWnd -- ModalDlg
MainWnd -- StsBar
MainWnd -- SomeCtrl

MainWnd ----- Config
MainWnd ----- DateTime
MainWnd ----- File
MainWnd ----- Font

EditWndBufferData -- LinkedList

ModalDlg -- Version

ModalDlg -- WinMain
SomeCtrl -- WinMain
StsBar -- WinMain
Config -- WinMain

@enduml
